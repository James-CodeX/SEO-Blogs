---
import BlogCard from './BlogCard.astro';
import { getAllCategories } from '../lib/supabase';

export interface BlogPost {
  id: string;
  title: string;
  description: string;
  slug: string;
  image?: string;
  published_at: string;
  read_time: string;
  category: string;
  tags: string[];
}

export interface Props {
  posts: BlogPost[];
  featured?: BlogPost;
}

const { posts, featured } = Astro.props;

// Get categories for filter buttons
const categories = await getAllCategories();
---

<section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <!-- Category Filter -->
  <div class="flex justify-center mb-12">
    <div class="flex flex-wrap gap-2 bg-gray-100 dark:bg-dark-900 p-2 rounded-xl shadow-sm border border-gray-200/50 dark:border-dark-800/50">
      <button class="filter-btn active" data-category="all">All</button>
      {categories.map(category => (
        <button class="filter-btn" data-category={category.slug}>
          {category.name}
        </button>
      ))}
    </div>
  </div>

  <!-- Blog Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="blog-grid">
    {featured && (
      <BlogCard 
        title={featured.title}
        description={featured.description}
        slug={featured.slug}
        image={featured.image}
        date={featured.published_at}
        readTime={featured.read_time}
        category={featured.category}
        tags={featured.tags}
        featured={true}
      />
    )}
    
    {posts.map(post => (
      <BlogCard 
        title={post.title}
        description={post.description}
        slug={post.slug}
        image={post.image}
        date={post.published_at}
        readTime={post.read_time}
        category={post.category}
        tags={post.tags}
      />
    ))}
  </div>

  <!-- Load More Button (if needed for pagination) -->
  {posts.length >= 9 && (
    <div class="text-center mt-12">
      <button class="px-8 py-3 bg-gradient-to-r from-primary-600 to-accent-600 text-white font-medium rounded-lg hover:from-primary-700 hover:to-accent-700 transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl">
        Load More Articles
      </button>
    </div>
  )}
</section>

<style>
  .filter-btn {
    @apply px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 border border-transparent;
    @apply text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-dark-800;
  }

  .filter-btn.active {
    @apply bg-gradient-to-r from-primary-600 to-accent-600 text-white shadow-lg border-primary-500;
  }
</style>

<script>
  // Category filtering
  const filterBtns = document.querySelectorAll('.filter-btn');
  const blogGrid = document.getElementById('blog-grid');
  
  filterBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      // Remove active class from all buttons
      filterBtns.forEach(b => b.classList.remove('active'));
      // Add active class to clicked button
      btn.classList.add('active');
      
      const category = btn.getAttribute('data-category');
      const articles = blogGrid?.querySelectorAll('article');
      
      articles?.forEach(article => {
        if (category === 'all') {
          article.style.display = 'block';
          article.classList.add('animate-fade-in');
        } else {
          const articleCategory = article.querySelector('.category-badge')?.textContent?.toLowerCase();
          if (articleCategory === category) {
            article.style.display = 'block';
            article.classList.add('animate-fade-in');
          } else {
            article.style.display = 'none';
          }
        }
      });
    });
  });
</script>